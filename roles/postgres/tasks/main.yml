---
- block:
  - name: Download postgresql 10 repository for CentOS
    get_url:
      url: https://download.postgresql.org/pub/repos/yum/testing/10/redhat/rhel-7-x86_64/pgdg-centos10-10-2.noarch.rpm
      dest: /tmp/pgdg-centos10-10-2.noarch.rpm

  - name: Install postgresql 10 repository for CentOS
    yum:
      name: '{{ item }}'
      state: installed
    become: true
    with_items:
      - /tmp/pgdg-centos10-10-2.noarch.rpm
  when: ansible_distribution == 'CentOS'

- block:
  - name: Download postgresql 10 repository for RedHat
    get_url:
      url: https://download.postgresql.org/pub/repos/yum/testing/10/redhat/rhel-7-x86_64/pgdg-redhat10-10-2.noarch.rpm
      dest: /tmp/pgdg-redhat10-10-2.noarch.rpm

  - name: Install postgresql 10 repository for RedHat
    yum:
      name: '{{ item }}'
      state: installed
    become: true
    with_items:
      - /tmp/pgdg-redhat10-10-2.noarch.rpm
  when: ansible_distribution == 'RedHat'

- name: Install postgresql 10
  yum:
    name: '{{ item }}'
    state: installed
    update_cache: true
  become: true
  with_items:
    - postgresql10-server

- name: Install python psycopg2 module
  pip:
    name: psycopg2
    state: present
  become: true

- name: Check if postgres data-dir is initialized
  find: 
    paths: /var/lib/pgsql/10/data
    file_type: directory
    patterns: "*"
  register: psql_data
  become: true
  ignore_errors: yes

- name: Initialize postgres data-dir
  raw: /usr/pgsql-10/bin/postgresql-10-setup initdb
  become: true
  ignore_errors: true
  when: psql_data.matched|int == 0

- name : Enable postgres service
  raw: systemctl enable postgresql-10.service
  become: true
  notify: start postgres

- name: Start postgres
  service:
    name: postgresql-10
    state: started
    enabled: yes
  become: true

- name: Update postgres config
  template:
    src: pg_hba.conf.j2
    dest: /var/lib/pgsql/10/data/pg_hba.conf
  become: true
  notify:
    - restart postgres
# 
- name: Ensure database {{ app_name }}_{{ app_env }} exists
  postgresql_db:
    name: '{{ app_name }}_{{ app_env }}'
    state: present
  become_user: postgres
  become: true

- name: Ensure user {{ postgres_user }} exists
  postgresql_user:
    db: '{{ app_name }}_{{ app_env }}'
    name: '{{ postgres_user }}'
    password: '{{ postgres_user_password }}'
    priv: "ALL"
    state: present
    encrypted: true
  become_user: postgres
  become: true
  notify:
    - restart postgres
